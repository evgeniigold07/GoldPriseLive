const axios = require('axios');
const { Telegraf } = require('telegraf');
const cron = require('node-cron');
const express = require('express');

// üîê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const TELEGRAM_BOT_TOKEN = "7620924463:AAE231OC4JlP5dKsf9qUQ4GNA364iEyeklQ";
const CHANNEL_ID = "@goldpriselive";
const TWELVE_API_KEY = "1b100a43c7504893a0fa01efd0520981";

const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

let lastPrice = null;

async function getGoldPrice() {
  try {
    const response = await axios.get(`https://api.twelvedata.com/price?symbol=XAU/USD&apikey=${TWELVE_API_KEY}`);
    return parseFloat(response.data.price);
  } catch (error) {
    console.error("Error fetching gold price:", error.message);
    return null;
  }
}

// ‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –∏ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
function isMarketClosed() {
  const now = new Date();
  const day = now.getUTCDay(); // 0 = Sunday, 6 = Saturday
  const hour = now.getUTCHours();

  // –†—ã–Ω–æ–∫ –∑–∞–∫—Ä—ã—Ç —Å –ø—è—Ç–Ω–∏—Ü—ã 21:00 UTC –¥–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è 22:00 UTC
  if (day === 5 && hour >= 21) return true;        // –ü—è—Ç–Ω–∏—Ü–∞ –≤–µ—á–µ—Ä
  if (day === 6) return true;                      // –°—É–±–±–æ—Ç–∞
  if (day === 0 && hour < 22) return true;         // –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –¥–æ 22:00
  if (hour < 0 || hour >= 23) return true;         // –ù–æ—á–Ω–∞—è –ø–∞—É–∑–∞

  return false;
}

// üïî –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
cron.schedule('*/5 * * * *', async () => {
  if (isMarketClosed()) return;

  const price = await getGoldPrice();
  if (price) {
    const emoji = !lastPrice || price >= lastPrice ? 'üü¢' : 'üî¥';
    lastPrice = price;

    const hashtags = '#XAUUSD #gold #forex #trading #goldprice #chart #financialmarkets';
    const message = `${emoji} XAU/USD: $${price}\n\n${hashtags}`;

    try {
      await bot.telegram.sendMessage(CHANNEL_ID, message);
      console.log(`[‚úì] Posted price: $${price}`);
    } catch (err) {
      console.error("Telegram error:", err.message);
    }
  }
});

// üé≠ –û–±–º–∞–Ω–∫–∞ –¥–ª—è Render ‚Äî –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
const app = express();
const PORT = process.env.PORT || 10000;
app.get('/', (req, res) => res.send('Bot is running'));
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

// üöÄ –ó–∞–ø—É—Å–∫
bot.launch();
console.log("Telegram bot started...");
